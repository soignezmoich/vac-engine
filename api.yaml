openapi: 3.0.0
info:
  title: Vac Engine API
  description: |
    ## Introduction

    The vac engine API allows running deductions on given inputs.

    ### Blueprint

    A blueprint is a deductive process definition that describes a set of
    outcome computations.

    A blueprint is composed of:

      1. A set of variable descriptions of three categories:
        * input variables expected from the api request
        * output variables returned in the api response
        * intermediate variables user as helpers in the computation process

        Any of these three categories can contain nested variables (objects).
      2. A set of deduction tables which defines its behaviour.

        Each table is used to determine the outcome value of one or several
        output variables, using a sequence of subsidiary conditions: conditions
        are tested one after the other until one is fulfilled, then the related
        outcome is applied.

        If no condition is fulfilled to determine an outcome for a given output
        variable, the latter is not returned.

    ### Processor

    A processor is a compiled blueprint with it's run environment. Processor IDs
    are always the same as the corresponding blueprint IDs.

    ### Portal

    A portal is an endpoint on which a (single) blueprint/processor is published.
    Api calls made to a portal will be treated using the published processor and
    returns the computed outcomes.

    ### Publication

    A publication is the relation between a blueprint/processor and a portal
    that makes the former callable on the latter's API url.

    ## Authentication

    All API requests must be authenticated with an API key.

    To authenticate the requests, pass the `Authorization` header with a
    `Bearer` token containing the API key.


    For example, if the API key is:

    `api_ga9cyre_gafksz5c6h2zbf77t9w4wgfsz674b5t32ghparft83368zaga88f6xyk8sr8wazwe3p4ekk2taxksshbcgg5`


    You need to pass the header as follow:

    `Authorization: Bearer api_ga9cyre_gafksz5c6h2zbf77t9w4wgfsz674b5t32ghparft83368zaga88f6xyk8sr8wazwe3p4ekk2taxksshbcgg5`




  version: 1.0.1

paths:
  /p/{portal_id}/run:
    post:
      operationId: post-run
      summary: Run
      description: Run a portal's processor on a given input
      parameters:
      - in: path
        name: portal_id
        schema:
          type: integer
        required: true
        description: "Portal ID"
        example: 3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - input
              properties:
                input:
                  type: object
                  example:
                    birthdate: "2002-04-01"
                  description: |
                    Input data.

                    The input format is defined in the blueprint definition.

                    It's root is an object containing an arbitrary number of
                    fields of the following types: 

                    - null values
                    - boolean values
                    - integer values
                    - number values (arbitrary-precision)
                    - string values (possibly restricted to a set of enum values)
                    - date values as "yyyy-mm-dd" strings
                    - objects whose values is of the above type or nested objects
                env:
                  type: object
                  description: |
                    The environment to use for the request.

                    This field is for test purpose and will only be taken into
                    account if a test api-key is used.
                  properties:
                    now:
                      type: string
                      description: |
                        The date at which the api call should be simulated.
                    

      responses:
        '200':
          description: Successful processor run
          content:
            application/json:
              schema:
                type: object
                properties:
                  input:
                    type: object
                    example:
                      birthdate: "2002-04-01"
                    description: >
                      The input data used by the processor.
                  output:
                    type: object
                    example:
                      age: 19
                      priority: 3
                      vaccine_compatibilities:
                        pfizer: true
                        moderna: false

                    description: |
                      The processed data output.

                      The complete format of the output can be queried via the
                      [GET /p/{portal_id}](#operation/get-portal) endpoint.

        '400':
          description: |
            The provided input does not complies with the given portal's
            processor input.

        '404':
          description: |
            The url or the api-key is invalid.  Or the api-key does not grant
            the right to access the given portal.


  /p/{portal_id}/info:
    get:
      operationId: get-portal
      summary: Get portal description
      description: |
        Get the description of the blueprint/processor published on the given
        portal.
      parameters:
      - in: path
        name: portal_id
        schema:
          type: integer
        required: true
        description: "Portal ID"
        example: 3

      responses:
        '200':
          description: Portal description successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  input:
                    type: object
                    description: |
                      The json schema describing the structure of the portal's
                      input.

                    example:
                      properties:
                        birthdate:
                          format: date
                          type: string
                      required:
                      - birthdate
                  output:
                    type: object
                    description: |
                      The json schema describing the structure of the portal's
                      output.

                    example:
                      properties:
                        age:
                          type: integer
                        vaccine_compatibilities:
                          type: object
                          properties:
                            pfizer:
                              type: boolean
                            moderna:
                              type: boolean

                  logic:
                    type: object
                    description: |
                      The partial and human readable explanation of the way
                      output is computed.

                      It contains a selection of output variables as keys.  The
                      values associated to these keys are lists of possible
                      outcomes along with snake case keywords describing the
                      cases that can lead to this outcome.

                    example:
                      vaccine_compatibilities.pfizer:
                        false:
                        - under_12
                        - pregnant
                        true:
                        - others
                      vaccine_compatibilities.moderna:
                        false:
                        - under_20
                        - pregnant
                        true:
                        - others

        '404':
          description: |
            The url or the api-key is invalid or the api-key does not grant the
            right to access the given portal.


