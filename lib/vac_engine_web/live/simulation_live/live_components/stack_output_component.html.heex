<div  class="w-full bg-white filter drop-shadow-lg p-3 cursor-default overflow-x-scroll">

    <div class="h-10">
        <div class="text-lg font-bold inline-block">
            Output
        </div>
        <div class="float-right">
            <form phx-change="set_filter" class="float-right" phx-target={@myself}>
                Show:
                <select name="filter" id="select_filter" class="form-fld">
                    <option value="all" selected={@filter=="all"}>
                        All
                    </option>
                    <option value="case" selected={@filter=="case"}>
                        Case only
                    </option>
                </select>
            </form>
        </div>
    </div>




    <div class="w-full border border-black">
        <div class="table-cell px-1 align-middle">
            <ToggleComponent.render
                active={Map.get(@runnable_case, :expected_error)}
                toggle_action={"toggle_expected_error"}
                target_component={"#stack_output_variable"}
            />
        </div>
        <div class="table-cell px-1 italic align-middle">
            expect invalid input
        </div>
    </div>

    <div class="h-5"/>

    <div class="table w-full border border-black">
        <div class="table-row text-sm font-bold bg-cream-100">
            <div class="table-cell px-1 border-b border-black">test</div>
            <div class="table-cell px-1 border-b border-black py-1">variable name</div>
            <div class="table-cell px-1 border-b border-black">forbid</div>
            <div class="table-cell px-1 border-b border-black">expect</div>
            <div class="table-cell px-1 border-b border-black">actual</div>
            <div class="table-cell px-1 border-b border-black w-8">ok?</div>
        </div>

        <%= for variable <- @output_variables do %>
            <.live_component
            module={StackOutputVariableComponent}
            id={"stack_output_variable_#{variable.id}"}
            variable={variable}
            stack={@stack}
            runnable_case={@runnable_case}
            filter={@filter} />
        <% end %>
    </div>
</div>