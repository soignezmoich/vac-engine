<div class={klass("border border-blue-600 p-1 flex flex-col mt-1", [
     {"bg-blue-50", @level == 0},
     {"bg-blue-100", @level == 1},
     {"bg-blue-150", @level == 2}
     ])}>
  <.form let={f} for={@changeset}
     id={@form_id}
     class="flex flex-col"
     phx-target={@myself}
     phx-submit="save"
     phx-change="validate">
    <%= select f, :composed_type, @composed_types,
          id: @composed_types_hash,
          class: "form-fld-sm text-xs mb-1",
          style: "background-color: white" %>

    <%= case form_value(f, :type) do %>
    <% "constant" -> %>
       <%= text_input f, :constant,
             class: "form-fld-sm w-full text-xs",
             style: "background-color: white" %>
       <%= case field_error(f, :constant) do %>
       <% nil -> %>
          <span class="text-green-600 text-xs italic mt-1 font-bold">
            Parsed as: <%= form_value(f, :constant_string) %>
          </span>
       <% e -> %>
          <span class="text-red-600 text-xs italic mt-1 font-bold">
            Error: <%= e %>
          </span>
       <% end %>
    <% "variable" -> %>

      <%= case @variables do %>
      <% [_|_] -> %>
       <%= select f, :variable, @variables,
             id: @variables_hash,
             class: "form-fld-sm text-xs",
             style: "background-color: white" %>
      <% _ -> %>
        <div class="text-red-600 text-xs italic mb-1 text-center font-bold">
          No <%= form_value(f, :return_type) %> variable found.
        </div>
      <% end %>

    <% "function" -> %>
       <%= select f, :function, @functions,
             id: @functions_hash,
             class: "form-fld-sm text-xs",
             style: "background-color: white" %>

    <% _ -> %>
    <% end %>
  </.form>

  <%= for arg <- @arguments do %>
     <%= if arg.readonly do %>
       <.live_component
         module={ExpressionNodeDisplayComponent}
         id={"#{@id}.#{arg.index}"}
         ast={arg.ast}
         level={@level + 1}
        />
     <% else %>
       <.live_component
         module={ExpressionNodeEditorComponent}
         id={"#{@id}.#{arg.index}"}
         form_id={"#{@form_id}.#{arg.index}"}
         parent_id={@id}
         level={@level + 1}
         argument_index={arg.index}
         variable_path_index={@variable_path_index}
         return_types={arg.return_types}
         ast={arg.ast}
         root_module={@root_module}
         root_id={@root_id}
         />
     <% end %>
  <% end %>

</div>
